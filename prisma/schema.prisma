generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Section {
  id              Int         @id @default(autoincrement())
  ClassCapacity   Int
  ClassNumber     Int
  Component       String?
  CourseNumber    String
  EndDate         String?
  EndTime         String?
  Friday          Boolean?
  InstructionMode String
  InstructorFirst String
  InstructorLast  String
  Location        String?
  Monday          Boolean?
  Saturday        Boolean?
  Section         String
  StartDate       String?
  StartTime       String?
  Subject         String
  Sunday          Boolean?
  Term            String
  Thursday        Boolean?
  Tuesday         Boolean?
  Units           Float?
  Wednesday       Boolean?
  TotalEnrollment Int         @default(0)
  A               Int?
  Am              Int?
  Bp              Int?
  B               Int?
  Bm              Int?
  Cp              Int?
  C               Int?
  Cm              Int?
  Dp              Int?
  D               Int?
  Dm              Int?
  F               Int?
  AvgGPA          Float?
  instructionId   Int
  Graded          Boolean     @default(false)
  instruction     Instruction @relation(fields: [instructionId], references: [id], onDelete: Cascade)

  @@unique([Term, Subject, CourseNumber, Section], name: "sectionConstraint")
  @@index([instructionId], map: "sections_instructionId_fkey")
  @@map("sections")
}

model Instruction {
  id              Int        @id @default(autoincrement())
  Subject         String
  CourseNumber    String
  InstructorFirst String
  InstructorLast  String
  TotalEnrollment Int        @default(0)
  AvgGPA          Float?
  courseId        Int
  instructorId    Int
  Course          Course     @relation(fields: [courseId], references: [id], onDelete: Cascade)
  Instructor      Instructor @relation(fields: [instructorId], references: [id], onDelete: Cascade)
  sections        Section[]

  @@unique([InstructorFirst, InstructorLast, Subject, CourseNumber], name: "instructionConstraint")
  @@index([courseId], map: "instructions_courseId_fkey")
  @@index([instructorId], map: "instructions_instructorId_fkey")
  @@map("instructions")
}

model Course {
  id              Int           @id @default(autoincrement())
  Subject         String
  CourseNumber    String
  TotalEnrollment Int           @default(0)
  AvgGPA          Float?
  Label           String
  CourseTitle     String?
  instructions    Instruction[]

  @@unique([Subject, CourseNumber], name: "courseConstraint")
  @@map("courses")
}

model Instructor {
  id              Int           @id @default(autoincrement())
  InstructorFirst String
  InstructorLast  String
  TotalEnrollment Int           @default(0)
  AvgGPA          Float?
  Label           String
  instructions    Instruction[]

  @@unique([InstructorFirst, InstructorLast], name: "instructorConstraint")
  @@map("instructors")
}
