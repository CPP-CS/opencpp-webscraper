generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Section {
  id          Int @id @default(autoincrement())
  ClassNumber Int

  Term         String
  Subject      String
  CourseNumber String
  Section      String

  InstructorFirst String
  InstructorLast  String

  ClassCapacity   Int
  InstructionMode String
  Component       String?
  Location        String?
  Units           Float?

  StartTime String?
  EndTime   String?
  StartDate String?
  EndDate   String?

  Friday    Boolean?
  Sunday    Boolean?
  Thursday  Boolean?
  Tuesday   Boolean?
  Monday    Boolean?
  Saturday  Boolean?
  Wednesday Boolean?

  TotalEnrollment Int     @default(0)
  Graded          Boolean @default(false)
  A               Int?
  Am              Int?
  Bp              Int?
  B               Int?
  Bm              Int?
  Cp              Int?
  C               Int?
  Cm              Int?
  Dp              Int?
  D               Int?
  Dm              Int?
  F               Int?
  AvgGPA          Float?

  instructionId Int
  instruction   Instruction @relation(fields: [instructionId], references: [id], onDelete: Cascade)

  @@unique([Term, Subject, CourseNumber, Section], name: "sectionConstraint")
  @@index([instructionId], map: "sections_instructionId_fkey")
  @@map("sections")
}

model Instruction {
  id              Int        @id @default(autoincrement())
  Subject         String
  CourseNumber    String
  InstructorFirst String
  InstructorLast  String
  TotalEnrollment Int        @default(0)
  AvgGPA          Float?
  courseId        Int
  instructorId    Int
  Course          Course     @relation(fields: [courseId], references: [id], onDelete: Cascade)
  Instructor      Instructor @relation(fields: [instructorId], references: [id], onDelete: Cascade)
  sections        Section[]

  @@unique([InstructorFirst, InstructorLast, Subject, CourseNumber], name: "instructionConstraint")
  @@index([courseId], map: "instructions_courseId_fkey")
  @@index([instructorId], map: "instructions_instructorId_fkey")
  @@map("instructions")
}

model Course {
  id              Int           @id @default(autoincrement())
  Subject         String
  CourseNumber    String
  TotalEnrollment Int           @default(0)
  CourseTitle     String?
  AvgGPA          Float?
  Label           String
  instructions    Instruction[]

  @@unique([Subject, CourseNumber], name: "courseConstraint")
  @@map("courses")
}

model Instructor {
  id              Int           @id @default(autoincrement())
  InstructorFirst String
  InstructorLast  String
  TotalEnrollment Int           @default(0)
  AvgGPA          Float?
  Label           String
  instructions    Instruction[]

  @@unique([InstructorFirst, InstructorLast], name: "instructorConstraint")
  @@map("instructors")
}
